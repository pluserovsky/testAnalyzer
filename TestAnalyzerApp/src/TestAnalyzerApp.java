
import java.awt.BorderLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import testanalyzerlib.TestAnalyzerLib;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.UIManager;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Lukasz Broll 225972
 */
public class TestAnalyzerApp extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    List<Integer> correctAnswers = new ArrayList<>();

    ArrayList<Integer> studentAnswers = new ArrayList<>();
    int optionsAmount = 0, maxOptionsAmount = 0;

    public TestAnalyzerApp() {
        initComponents();
        ImageIcon iconImage = new ImageIcon(this.getClass().getResource("ikon.jpg"));
        this.setIconImage(iconImage.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loadStudentAnswers = new javax.swing.JButton();
        coutStudentScore = new javax.swing.JButton();
        correctAnswersHistogramPane = new javax.swing.JTabbedPane();
        examPanel = new javax.swing.JPanel();
        examScrollPane = new javax.swing.JScrollPane();
        examTextArea = new javax.swing.JTextArea();
        answersPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradesTextArea = new javax.swing.JTextArea();
        answersHistogramPanel = new javax.swing.JPanel();
        gradesHistogramPanel = new javax.swing.JPanel();
        correctAnswersHistogramPanel = new javax.swing.JPanel();
        loadExamContent = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Analyzer");
        setLocationByPlatform(true);

        loadStudentAnswers.setText("Wczytaj odpowiedzi");
        loadStudentAnswers.setEnabled(false);
        loadStudentAnswers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadStudentAnswersActionPerformed(evt);
            }
        });

        coutStudentScore.setText("Generuj statystyki");
        coutStudentScore.setEnabled(false);
        coutStudentScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coutStudentScoreActionPerformed(evt);
            }
        });

        examTextArea.setColumns(20);
        examTextArea.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        examTextArea.setRows(5);
        examTextArea.setText("Wymagany format egzaminu:\nPytanie 1#n\nOdp 1\n...\nOdp n\n\n...\n\nPytanie N#n\nOdp 1\n...\nOdp n\ngdzie liczba za znakiem # wskazuje poprawną odpowiedź.\n\nWymagany format odpowiedzi:\nnr indeksu1;odp1;odp2;odp3;...\nnr indeksu2;odp1;odp2;odp3;...\nnr indeksu3;odp1;odp2;odp3;...\n...\nnr indeksuN;odp1;odp2;odp3;...");
        examScrollPane.setViewportView(examTextArea);

        javax.swing.GroupLayout examPanelLayout = new javax.swing.GroupLayout(examPanel);
        examPanel.setLayout(examPanelLayout);
        examPanelLayout.setHorizontalGroup(
            examPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(examScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
        );
        examPanelLayout.setVerticalGroup(
            examPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(examScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
        );

        correctAnswersHistogramPane.addTab("Treść egzaminu", examPanel);

        gradesTextArea.setColumns(20);
        gradesTextArea.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        gradesTextArea.setRows(5);
        jScrollPane1.setViewportView(gradesTextArea);

        javax.swing.GroupLayout answersPanelLayout = new javax.swing.GroupLayout(answersPanel);
        answersPanel.setLayout(answersPanelLayout);
        answersPanelLayout.setHorizontalGroup(
            answersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
        );
        answersPanelLayout.setVerticalGroup(
            answersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
        );

        correctAnswersHistogramPane.addTab("Wyniki egzaminu", answersPanel);

        javax.swing.GroupLayout answersHistogramPanelLayout = new javax.swing.GroupLayout(answersHistogramPanel);
        answersHistogramPanel.setLayout(answersHistogramPanelLayout);
        answersHistogramPanelLayout.setHorizontalGroup(
            answersHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );
        answersHistogramPanelLayout.setVerticalGroup(
            answersHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );

        correctAnswersHistogramPane.addTab("Rozkład zadań", answersHistogramPanel);

        javax.swing.GroupLayout gradesHistogramPanelLayout = new javax.swing.GroupLayout(gradesHistogramPanel);
        gradesHistogramPanel.setLayout(gradesHistogramPanelLayout);
        gradesHistogramPanelLayout.setHorizontalGroup(
            gradesHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );
        gradesHistogramPanelLayout.setVerticalGroup(
            gradesHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );

        correctAnswersHistogramPane.addTab("Rozkład ocen", gradesHistogramPanel);

        javax.swing.GroupLayout correctAnswersHistogramPanelLayout = new javax.swing.GroupLayout(correctAnswersHistogramPanel);
        correctAnswersHistogramPanel.setLayout(correctAnswersHistogramPanelLayout);
        correctAnswersHistogramPanelLayout.setHorizontalGroup(
            correctAnswersHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );
        correctAnswersHistogramPanelLayout.setVerticalGroup(
            correctAnswersHistogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );

        correctAnswersHistogramPane.addTab("Rozkład odpowiedzi", correctAnswersHistogramPanel);

        loadExamContent.setText("Wczytaj egzamin");
        loadExamContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadExamContentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(coutStudentScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadStudentAnswers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadExamContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(correctAnswersHistogramPane)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(loadExamContent, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadStudentAnswers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coutStudentScore)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(correctAnswersHistogramPane, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Metoda odcztująca kartę odpowiedzi studentów po wciśnięciu przycisku
     * 'Wczytaj odpowiedzi'
     */
    private void loadStudentAnswersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadStudentAnswersActionPerformed
        JFileChooser fileChooser = new JFileChooser();

        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            try {
                studentAnswers.clear();
                Scanner input = new Scanner(file);
                //input.useDelimiter(";");
                while (input.hasNextLine()) {

                    String inputNext = input.nextLine();
                    String[] fields = inputNext.split(";");
                    for (int i = 0; i <= correctAnswers.size(); i++) {
                        studentAnswers.add(Integer.parseInt(fields[i]));

                    }
                }
                input.close();
                coutStudentScore.setEnabled(true);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(TestAnalyzerApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loadStudentAnswersActionPerformed
    /**
     * Metoda generująca statystyki i liczaca oceny za pomocą biblioteki
     * TestAnalyzerLib
     */
    private void coutStudentScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coutStudentScoreActionPerformed
        TestAnalyzerLib lib = new TestAnalyzerLib();
        lib.loadCorrectAnswersList(correctAnswers);
        lib.loadStudentAnswersList(studentAnswers);
        lib.loadAnswersSize(maxOptionsAmount);

        gradesHistogramPanel.setLayout(new java.awt.BorderLayout());
        gradesHistogramPanel.add(lib.gradesHistogram(), BorderLayout.CENTER);
        gradesHistogramPanel.validate();
        answersHistogramPanel.setLayout(new java.awt.BorderLayout());
        answersHistogramPanel.add(lib.answersHistogram(), BorderLayout.CENTER);
        answersHistogramPanel.validate();
        correctAnswersHistogramPanel.setLayout(new java.awt.BorderLayout());
        correctAnswersHistogramPanel.add(lib.correctAnswersHistogram(), BorderLayout.CENTER);
        correctAnswersHistogramPanel.validate();
        gradesTextArea.setText(null);
        gradesTextArea.setText(lib.printGrades());
        correctAnswersHistogramPane.setSelectedIndex(1);

    }//GEN-LAST:event_coutStudentScoreActionPerformed
    /**
     * Metoda odcztująca kartę prawidłowych odpowiedzi po wciśnięciu przycisku
     * 'Wczytaj egzamin'
     */
    private void loadExamContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadExamContentActionPerformed
        JFileChooser fileChooser = new JFileChooser();

        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            try {
                examTextArea.setText(null);
                Scanner input = new Scanner(file);
                correctAnswers.clear();
                while (input.hasNextLine()) {
                    String line = input.nextLine();
                    examTextArea.append(line);
                    examTextArea.append("\n");
                    optionsAmount++;
                    if (line.contains("#")) {
                        correctAnswers.add(Character.getNumericValue(line.charAt(line.length() - 1)));
                        if (maxOptionsAmount < optionsAmount) {
                            maxOptionsAmount = optionsAmount;
                        }
                        optionsAmount = 0;
                    }

                }
                input.close();
                loadStudentAnswers.setEnabled(true);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(TestAnalyzerApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loadExamContentActionPerformed

    /**
     * Automatyczna metoda uruchamiająca projekt i okno
     *
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestAnalyzerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TestAnalyzerApp().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel answersHistogramPanel;
    private javax.swing.JPanel answersPanel;
    private javax.swing.JTabbedPane correctAnswersHistogramPane;
    private javax.swing.JPanel correctAnswersHistogramPanel;
    private javax.swing.JButton coutStudentScore;
    private javax.swing.JPanel examPanel;
    private javax.swing.JScrollPane examScrollPane;
    private javax.swing.JTextArea examTextArea;
    private javax.swing.JPanel gradesHistogramPanel;
    private javax.swing.JTextArea gradesTextArea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadExamContent;
    private javax.swing.JButton loadStudentAnswers;
    // End of variables declaration//GEN-END:variables
}
